<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd">
    <http:listener-config name="demo-cicd-api-1-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="demo-cicd-api-1-config" api="resource::34f08f6e-2359-4148-8b9b-27ed6bf1f80d:demo-cicd-api-1:1.0.1:raml:zip:demo-cicd-api-1.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <db:config name="Database_Config" doc:name="Database Config" doc:id="13eb1576-e86c-4719-8ca1-d96c9680a093" >
		<db:my-sql-connection host="ec2-3-90-88-216.compute-1.amazonaws.com" port="3306" user="${db.username}" password="${db.password}" database="Customer">
			<db:connection-properties >
				<db:connection-property key="useSSL" value="true" />
				<db:connection-property key="requireSSL" value="true" />
				<db:connection-property key="clientCertificateKeyStoreUrl" value="file:${mule.home}/apps/${app.name}/keystore.jks" />
				<db:connection-property key="clientCertificateKeyStorePassword" value="${db.keystore.password}" />
			</db:connection-properties>
		</db:my-sql-connection>
	</db:config>
	<api-gateway:autodiscovery apiId="${api.id}" ignoreBasePath="true" doc:name="API Autodiscovery" doc:id="7453764b-dba0-4433-99a9-088054a08189" flowRef="demo-cicd-api-1-main" />
	<flow name="demo-cicd-api-1-main">
        <http:listener config-ref="demo-cicd-api-1-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="demo-cicd-api-1-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="demo-cicd-api-1-console">
        <http:listener config-ref="demo-cicd-api-1-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="demo-cicd-api-1-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="get:\customers:demo-cicd-api-1-config">
        <db:select doc:name="Select" doc:id="c2319a0b-888d-41cc-bd9b-da20cd9f37f7" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from CustomerDetails;]]></db:sql>
		</db:select>
		<!-- [STUDIO:"Transform Message"]<ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
[
  {
    firstName: "Danny",
    lastName: "Brookshire",
    phone: "123-412-3412",
    email: "danny.brookshire@example.com",
    deliveryAddress: {
      street: "44 Shirley Ave.",
      city: "West Chicago",
      postalCode: "60185",
      state: "IL",
      country: "USA"
    },
    postalAddress: {
      street: "44 Shirley Ave.",
      city: "West Chicago",
      postalCode: "60185",
      state: "IL",
      country: "USA"
    }
  }
&#93; as Array {encoding: "UTF-8", mediaType: "application/json"}&#93;&#93;></ee:set-payload>
            </ee:message>
        </ee:transform> [STUDIO] -->
		<ee:transform doc:name="Transform Message" doc:id="573f0059-ed92-45dc-9eae-e38f961d67c0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
    <flow name="get:\customers\(customerid):demo-cicd-api-1-config">
        <ee:transform doc:name="Transform Message">
            <ee:variables>
                <ee:set-variable variableName="customerid">attributes.uriParams.'customerid'</ee:set-variable>
            </ee:variables>
        </ee:transform>
        <db:select doc:name="Select" doc:id="b696bdfb-a99f-47cc-b886-b27c6e5e598e" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from CustomerDetails where CustomerID = :customerid;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{"customerid": vars.customerid}]]]></db:input-parameters>
		</db:select>
		<!-- [STUDIO:"Transform Message"]<ee:transform doc:name="Transform Message">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
{
  firstName: "Danny",
  lastName: "Brookshire",
  phone: "123-412-3412",
  email: "danny.brookshire@example.com",
  deliveryAddress: {
    street: "44 Shirley Ave.",
    city: "West Chicago",
    postalCode: "60185",
    state: "IL",
    country: "USA"
  },
  postalAddress: {
    street: "44 Shirley Ave.",
    city: "West Chicago",
    postalCode: "60185",
    state: "IL",
    country: "USA"
  }
} as Object {encoding: "UTF-8", mediaType: "application/json"}&#93;&#93;></ee:set-payload>
            </ee:message>
        </ee:transform> [STUDIO] -->
		<ee:transform doc:name="Transform Message" doc:id="7c49ec1a-287e-4f84-9567-2111b09c95b7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
</mule>
